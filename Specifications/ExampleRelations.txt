namespace TermVar: Term

sort Term
    inh ctx TermVar
    | Var (x@ctx)
    | Lam (t: Term) [x: TermVar]
        t.ctx = lhs.ctx, x
    | App (t1: Term) (t2: Term)
    | Prod (t1: Term) (t2: Term)
    | Let (p: Pat) (t1: Term) (t2: Term)
        p.ictx = lhs.ctx
        t2.ctx = p.sctx

sort Pat
    inh ictx TermVar
    syn sctx TermVar
    | PVar [x: TermVar]
        lhs.sctx = lhs.ictx, x
    | PProd (p1: Pat) (p2: Pat)
        p1.ictx = lhs.ictx
        p2.ictx = p1.sctx
        lhs.sctx = p2.sctx


Relations

value : Term -> o
value (Abs x t).

opsem : Term -> Term -> o
opsem (App T1 T2) (App T1' T2) :- opsem T1 T1'.
opsem (App V T) (App V T') :- value V, opsem T T'.
opsem (App (Abs x T1) V2) (T1[x -> V2]).